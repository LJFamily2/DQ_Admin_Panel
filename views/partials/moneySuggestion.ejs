<!-- Button to open the modal -->
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#suggestionModal" onclick="suggestMoneyDistributionForAll()">
  Gợi ý sắp xếp tiền
</button>

<div class="modal fade" id="suggestionModal" tabindex="-1" aria-labelledby="suggestionModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-xl modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="suggestionModalLabel">Gợi ý</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="mb-3">
          <label class="form-label">Nhập số lượng từng mệnh giá</label>
          <div class="row d-flex">
            <div class="col form-check">
              <label class="form-check-label" for="denomination500000" style="font-size: small;">500,000 VNĐ</label>
              <input class="form-control" type="number" name="denomination" id="denomination500000" value="0" min="0">
            </div>
            <div class="col form-check">
              <label class="form-check-label" for="denomination200000" style="font-size: small;">200,000 VNĐ</label>
              <input class="form-control" type="number" name="denomination" id="denomination200000" value="0" min="0">
            </div>
            <div class="col form-check">
              <label class="form-check-label" for="denomination100000" style="font-size: small;">100,000 VNĐ</label>
              <input class="form-control" type="number" name="denomination" id="denomination100000" value="0" min="0">
            </div>
            <div class="col form-check">
              <label class="form-check-label" for="denomination50000" style="font-size: small;">50,000 VNĐ</label>
              <input class="form-control" type="number" name="denomination" id="denomination50000" value="0" min="0">
            </div>
            <div class="col form-check">
              <label class="form-check-label" for="denomination20000" style="font-size: small;">20,000 VNĐ</label>
              <input class="form-control" type="number" name="denomination" id="denomination20000" value="0" min="0">
            </div>
            <div class="col form-check">
              <label class="form-check-label" for="denomination10000" style="font-size: small;">10,000 VNĐ</label>
              <input class="form-control" type="number" name="denomination" id="denomination10000" value="0" min="0">
            </div>
            <div class="col form-check">
              <label class="form-check-label" for="denomination5000" style="font-size: small;">5,000 VNĐ</label>
              <input class="form-control" type="number" name="denomination" id="denomination5000" value="0" min="0">
            </div>
            <div class="col form-check">
              <label class="form-check-label" for="denomination2000" style="font-size: small;">2,000 VNĐ</label>
              <input class="form-control" type="number" name="denomination" id="denomination2000" value="0" min="0">
            </div>
            <div class="col form-check">
              <label class="form-check-label" for="denomination1000" style="font-size: small;">1,000 VNĐ</label>
              <input class="form-control" type="number" name="denomination" id="denomination1000" value="0" min="0">
            </div>
          </div>
        </div>
        <div id="suggestionResult" class="mt-3"></div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
      </div>
    </div>
  </div>
</div>

<script>
  const denominations = [500000, 200000, 100000, 50000, 20000, 10000, 5000, 2000, 1000];
  const dailySupplyId = '<%= slug %>'; // Replace with the actual daily supply ID

  function getOptimalMoneyDistribution(totalPrice, availableQuantities) {
    const distribution = {};
    let remainingAmount = totalPrice;

    denominations.forEach(denomination => {
      let count = Math.min(Math.floor(remainingAmount / denomination), availableQuantities[denomination] || 0);
      if (count > 0) {
        distribution[denomination] = count;
        remainingAmount -= count * denomination;
      }
    });

    return {
      distribution,
      remainingAmount
    };
  }

  function suggestMoneyDistributionForAll() {
    const totalGets = document.querySelectorAll('.totalGet');
    const totalPieces = {};
    const availableQuantities = {};
    const initialQuantities = {};

    denominations.forEach(denomination => {
      const element = document.getElementById(`denomination${denomination}`);
      if (element) {
        availableQuantities[denomination] = parseInt(element.value) || 0;
        initialQuantities[denomination] = availableQuantities[denomination];
      } else {
        availableQuantities[denomination] = 0;
        initialQuantities[denomination] = 0;
      }
    });

    let resultHtml = '<h6>Phân phối tiền:</h6><ul>';

    totalGets.forEach(totalGet => {
      let totalPrice = parseInt(totalGet.textContent.replace(/\./g, '').replace(/\,/g, '.')) || 0;
      totalPrice = Math.round(totalPrice / 1000) * 1000;

      const {
        distribution,
        remainingAmount
      } = getOptimalMoneyDistribution(totalPrice, availableQuantities);

      resultHtml += `<li>Tổng số tiền (${totalPrice.toLocaleString('vi-VN')} VNĐ):<ul>`;
      Object.entries(distribution).forEach(([denomination, count]) => {
        resultHtml += `<li>${count} tờ ${parseInt(denomination).toLocaleString('vi-VN')} VNĐ</li>`;
        totalPieces[denomination] = (totalPieces[denomination] || 0) + count;
        availableQuantities[denomination] -= count;
      });
      resultHtml += '</ul></li>';

      if (remainingAmount > 0) {
        resultHtml += `<li>Thiếu ${remainingAmount.toLocaleString('vi-VN')} VNĐ</li>`;
      }
    });

    resultHtml += '</ul><h6>Tổng số lượng tờ tiền:</h6><ul>';
    Object.entries(totalPieces).forEach(([denomination, count]) => {
      resultHtml += `<li>${count} tờ ${parseInt(denomination).toLocaleString('vi-VN')} VNĐ</li>`;
    });
    resultHtml += '</ul>';

    resultHtml += '<h6>Số lượng tờ tiền còn lại:</h6><ul>';
    Object.entries(availableQuantities).forEach(([denomination, count]) => {
      if (count > 0) {
        resultHtml += `<li>${count} tờ ${parseInt(denomination).toLocaleString('vi-VN')} VNĐ</li>`;
      }
    });
    resultHtml += '</ul>';

    document.getElementById('suggestionResult').innerHTML = resultHtml;
  }

  function saveQuantitiesToSessionStorage() {
    const quantities = {};
    denominations.forEach(denomination => {
      const element = document.getElementById(`denomination${denomination}`);
      if (element) {
        quantities[denomination] = element.value;
      }
    });
    sessionStorage.setItem(`quantities_${dailySupplyId}`, JSON.stringify(quantities));
  }

  function loadQuantitiesFromSessionStorage() {
    const quantities = JSON.parse(sessionStorage.getItem(`quantities_${dailySupplyId}`));
    if (quantities) {
      denominations.forEach(denomination => {
        const element = document.getElementById(`denomination${denomination}`);
        if (element && quantities[denomination] !== undefined) {
          element.value = quantities[denomination];
        }
      });
    }
  }

  document.querySelectorAll('input[name="denomination"]').forEach(input => {
    input.addEventListener('input', () => {
      suggestMoneyDistributionForAll();
      saveQuantitiesToSessionStorage();
    });
  });

  document.addEventListener('DOMContentLoaded', loadQuantitiesFromSessionStorage);
</script>